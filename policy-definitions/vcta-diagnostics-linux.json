{
  "name": "vcta-diagnostics-linux",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Enable diagnostic setting collection on Linux VMs for the Secureworks vCTA",
    "policyType": "Custom",
    "mode": "All",
    "description": "This policy deploys the Azure diagnostics extension to Linux VMs matching a specific tag-value pair, to enable log collection in Secureworks using the vCTA",
    "metadata": {
      "category": "Security"
    },
    "parameters": {
      "storageAccount": {
        "type": "string",
        "metadata": {
          "displayName": "Resource ID of the storage account to use for logging",
          "strongType": "Microsoft.Storage/storageAccounts"
        }
      },
      "tagName": {
        "type": "string",
        "metadata": {
          "displayName": "The tag name to match"
        }
      },
      "tagValue": {
        "type": "array",
        "metadata": {
          "displayName": "The tag value(s) to match"
        }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Compute/virtualMachines"
          },
          {
            "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
            "equals": "Linux"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "deployIfNotExists",
        "details": {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          ],
          "existenceCondition": {
            "allOf": [
              {
                "field": "Microsoft.Compute/virtualMachines/extensions/type",
                "equals": "LinuxDiagnostic"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                "equals": "Microsoft.Azure.Diagnostics"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                "equals": "Succeeded"
              }
            ]
          },
          "deployment": {
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "vmName": {
                    "type": "string"
                  },
                  "vmLocation": {
                    "type": "string",
                    "metadata": {
                      "strongType": "location"
                    }
                  },
                  "storageAccount": {
                    "type": "string",
                    "metadata": {
                      "strongType": "Microsoft.Storage/storageAccounts"
                    }
                  },
                  "now": {
                    "type": "string",
                    "defaultValue": "[utcNow('yyyy-MM-dd''T''HH:mm:ssZ')]"
                  }
                },
                "variables": {
                  "sasProperties": {
                    "signedServices": "bt",
                    "signedPermission": "acluw",
                    "signedExpiry": "[dateTimeAdd(parameters('now'), 'P30Y')]",
                    "signedResourceTypes": "co",
                    "signedProtocol": "https",
                    "keyToSign": "key1"
                  },
                  "storageAccountName": "[last(split(parameters('storageAccount'), '/'))]"
                },
                "resources": [
                  {
                    "name": "[concat(parameters('vmName'), '/LinuxDiagnostic')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters('vmLocation')]",
                    "apiVersion": "2020-12-01",
                    "tags": {
                      "displayName": "AzureDiagnostics"
                    },
                    "properties": {
                      "publisher": "Microsoft.Azure.Diagnostics",
                      "type": "LinuxDiagnostic",
                      "typeHandlerVersion": "4.0",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ladCfg": {
                          "diagnosticMonitorConfiguration": {
                            "eventVolume": "Medium",
                            "metrics": {
                              "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                              "metricAggregation": [
                                {
                                  "scheduledTransferPeriod": "PT1H"
                                },
                                {
                                  "scheduledTransferPeriod": "PT1M"
                                }
                              ]
                            },
                            "performanceCounters": {
                              "performanceCounterConfiguration": []
                            },
                            "syslogEvents": {
                              "sinks": "jsonblobsink",
                              "syslogEventConfiguration": {
                                "LOG_AUTH": "LOG_DEBUG",
                                "LOG_AUTHPRIV": "LOG_DEBUG",
                                "LOG_CRON": "LOG_DEBUG",
                                "LOG_DAEMON": "LOG_DEBUG",
                                "LOG_FTP": "LOG_DEBUG",
                                "LOG_KERN": "LOG_DEBUG",
                                "LOG_LOCAL0": "LOG_DEBUG",
                                "LOG_LOCAL1": "LOG_DEBUG",
                                "LOG_LOCAL2": "LOG_DEBUG",
                                "LOG_LOCAL3": "LOG_DEBUG",
                                "LOG_LOCAL4": "LOG_DEBUG",
                                "LOG_LOCAL5": "LOG_DEBUG",
                                "LOG_LOCAL6": "LOG_DEBUG",
                                "LOG_LOCAL7": "LOG_DEBUG",
                                "LOG_LPR": "LOG_DEBUG",
                                "LOG_MAIL": "LOG_DEBUG",
                                "LOG_NEWS": "LOG_DEBUG",
                                "LOG_SYSLOG": "LOG_DEBUG",
                                "LOG_USER": "LOG_DEBUG",
                                "LOG_UUCP": "LOG_DEBUG"
                              }
                            }
                          },
                          "sampleRateInSeconds": 15
                        },
                        "fileLogs": [
                          {
                            "file": "/var/log/messages",
                            "sinks": "jsonblobsink"
                          },
                          {
                            "file": "/var/log/secure",
                            "sinks": "jsonblobsink"
                          }
                        ],
                        "StorageAccount": "[variables('storageAccountName')]"
                      },
                      "protectedSettings": {
                        "storageAccountName": "[variables('storageAccountName')]",
                        "storageAccountEndpoint": "[concat('https://', environment().suffixes.storage)]",
                        "storageAccountSasToken": "[listAccountSas(parameters('storageAccount'), '2019-06-01', variables('sasProperties')).accountSasToken]",
                        "sinksConfig": {
                          "sink": [
                            {
                              "name": "jsonblobsink",
                              "type": "JsonBlob"
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "parameters": {
                "vmName": {
                  "value": "[field('fullName')]"
                },
                "vmLocation": {
                  "value": "[field('location')]"
                },
                "storageAccount": {
                  "value": "[parameters('storageAccount')]"
                }
              }
            }
          }
        }
      }
    }
  }
}
